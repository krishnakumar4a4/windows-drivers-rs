on:
  push:
  pull_request:
  merge_group:
  schedule: # Trigger a job on default branch at 4AM PST everyday
    - cron: "0 11 * * *"

name: Test

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        runner:
          - windows-latest
          - windows-11-arm

        wdk:
          - Microsoft.WindowsWDK.10.0.22621 # NI WDK

        llvm:
          - 17.0.6

        rust_toolchain:
          - stable
          - beta
          - nightly

        cargo_profile:
          - dev
          - release

    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Winget
        uses: ./.github/actions/winget-install
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install LLVM ${{ matrix.llvm }}
        run: |
          # Use native winget.exe instead of PowerShell module for ARM64 compatibility
          Write-Host "Checking for existing LLVM installation..."
          winget list --id LLVM.LLVM --exact --accept-source-agreements --disable-interactivity
          
          Write-Host "Force Installing LLVM ${{ matrix.llvm }}..."
          winget install --id LLVM.LLVM --version ${{ matrix.llvm }} --source winget --force --exact --silent --accept-source-agreements --accept-package-agreements --disable-interactivity
          
          if ($LASTEXITCODE -ne 0) {
            Write-Error "LLVM ${{ matrix.llvm }} force installation failed with exit code: $LASTEXITCODE"
            exit 1
          }

          clang --version

      - name: Install WDK (${{ matrix.wdk }})
        run: |
          # Use native winget.exe instead of PowerShell module for ARM64 compatibility
          Write-Host "Checking for existing WDK installation..."
          $installedPackages = winget list --id ${{ matrix.wdk }} --exact --accept-source-agreements --disable-interactivity 2>$null
          
          if ($installedPackages -match [regex]::Escape("${{ matrix.wdk }}")) {
            Write-Host "${{ matrix.wdk }} is already installed. Checking for updates..."
            winget upgrade --id ${{ matrix.wdk }} --source winget --exact --silent --accept-source-agreements --accept-package-agreements --disable-interactivity
          } else {
            Write-Host "Installing ${{ matrix.wdk }}..."
            winget install --id ${{ matrix.wdk }} --source winget --exact --silent --accept-source-agreements --accept-package-agreements --disable-interactivity
            
            if ($LASTEXITCODE -ne 0) {
              Write-Error "WDK installation failed with exit code: $LASTEXITCODE"
              exit 1
            }
          }

      - name: Install Rust Toolchain (${{ matrix.rust_toolchain }})
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_toolchain }}

      - name: Install Cargo Expand
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-expand@1.0.85

      - name: Run Cargo Test
        run: cargo +${{ matrix.rust_toolchain }} test --locked --profile ${{ matrix.cargo_profile }} --all-features
