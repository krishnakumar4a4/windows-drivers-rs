on:
  push:
  pull_request:
  merge_group:
  schedule: # Trigger a job on default branch at 4AM PST everyday
    - cron: "0 11 * * *"

name: Test

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        runner:
          - name: windows-latest
            arch: amd64
          - name: windows-11-arm
            arch: arm64

        wdk:
          - version: 10.0.22621 # NI WDK
            source: winget
          - version: 10.0.26100 # GE WDK
            source: nuget

        llvm:
          - 17.0.6

        rust_toolchain:
          - stable
          - beta
          - nightly

        cargo_profile:
          - dev
          - release

        # Exclude WDK 10.0.22621 with ARM64 runner as it doesn't ship certmgr and makecert binaries
        exclude:
          - runner:
              name: windows-11-arm
              arch: arm64
            wdk:
              version: 10.0.22621
              source: winget

    runs-on: ${{ matrix.runner.name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Winget
        uses: ./.github/actions/winget-install
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install LLVM ${{ matrix.llvm }}
        run: |
          # Use native winget.exe instead of PowerShell module for ARM64 compatibility
          Write-Host "Checking for existing LLVM installation..."
          winget list --id LLVM.LLVM --exact --accept-source-agreements --disable-interactivity

          Write-Host "Force Installing LLVM ${{ matrix.llvm }}..."
          winget install --id LLVM.LLVM --version ${{ matrix.llvm }} --source winget --force --exact --silent --accept-source-agreements --accept-package-agreements --disable-interactivity

          if ($LASTEXITCODE -ne 0) {
            Write-Error "LLVM ${{ matrix.llvm }} force installation failed with exit code: $LASTEXITCODE"
            exit 1
          }

          clang --version

      - name: Install WDK (${{ matrix.wdk.version }})
        uses: ./.github/actions/install-wdk
        with:
          version: ${{ matrix.wdk.version }}
          source: ${{ matrix.wdk.source }}
          host: ${{ matrix.runner.arch }}
          target: ${{ matrix.runner.arch }}

      - name: Install Rust Toolchain (${{ matrix.rust_toolchain }})
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_toolchain }}

      - name: Install Cargo Expand
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-expand@1.0.85

      - name: Run Cargo Test
        run: cargo +${{ matrix.rust_toolchain }} test --locked --profile ${{ matrix.cargo_profile }} --all-features
