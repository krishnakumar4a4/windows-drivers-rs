name: Build

on:
  push:
  pull_request:
  merge_group:
  schedule: # Trigger a job on default branch at 4AM PST everyday
    - cron: "0 11 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  RUSTFLAGS: >-
    -D warnings
    -C target-feature=+crt-static

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false # Allow all matrix variants to complete even if some fail
      matrix:
        runner:
          - name: windows-latest
            arch: x64
          - name: windows-11-arm
            arch: arm64

        wdk:
          - version: 10.0.22621 # NI WDK
            source: winget
          - version: 10.0.26100 # GE WDK
            source: nuget

        llvm:
          - 17.0.6

        rust_toolchain:
          - stable
          - beta
          - nightly

        cargo_profile:
          - dev
          - release

        target_triple:
          - name: x86_64-pc-windows-msvc
            arch: amd64
          - name: aarch64-pc-windows-msvc
            arch: arm64
    
    runs-on: ${{ matrix.runner.name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Winget
        run: |
          Install-Script winget-install -Force
          winget-install -Force

      - name: Install LLVM ${{ matrix.llvm }}
        run: |
          # Use native winget.exe instead of PowerShell module for ARM64 compatibility
          Write-Host "Checking for existing LLVM installation..."
          winget list --id LLVM.LLVM --exact --accept-source-agreements --disable-interactivity
          
          Write-Host "Force Installing LLVM ${{ matrix.llvm }}..."
          winget install --id LLVM.LLVM --version ${{ matrix.llvm }} --source winget --force --exact --silent --accept-source-agreements --accept-package-agreements --disable-interactivity
          
          if ($LASTEXITCODE -ne 0) {
            Write-Error "LLVM ${{ matrix.llvm }} force installation failed with exit code: $LASTEXITCODE"
            exit 1
          }

          clang --version

      - name: Install WDK (${{ matrix.wdk.version }})
        uses: ./.github/actions/install-wdk
        with:
          version: ${{ matrix.wdk.version }}
          source: ${{ matrix.wdk.source }}
          host: ${{ matrix.runner.arch }}
          target: ${{ matrix.target_triple.arch }}

      - name: Install Rust Toolchain (${{ matrix.rust_toolchain }})
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          targets: |
            ${{ matrix.target_triple.name }}

      - name: Run Cargo Build
        run: cargo +${{ matrix.rust_toolchain }} build --locked --profile ${{ matrix.cargo_profile }} --target ${{ matrix.target_triple.name }} --workspace --all-features

      - name: Install Cargo Make
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-make

      - name: Run Cargo Make (package-driver-flow) in Workspace
        run: cargo make package-driver-flow +${{ matrix.rust_toolchain }} --locked --profile ${{ matrix.cargo_profile }} --target ${{ matrix.target_triple.name }} --workspace

      - name: Build Examples (via Cargo Make)
        run: cargo make --cwd ./examples build +${{ matrix.rust_toolchain }} --locked --profile ${{ matrix.cargo_profile }} --target ${{ matrix.target_triple.name }}

      - name: Package Examples (via Cargo Make)
        # Skip this step when WDK 10.0.22621 is used with ARM64 runner as it doesn't ship certmgr and makecert binaries
        if: ${{ !(matrix.wdk.version == '10.0.22621' && matrix.runner.arch == 'arm64') }}
        run: cargo make --cwd ./examples package-driver-flow +${{ matrix.rust_toolchain }} --locked --profile ${{ matrix.cargo_profile }} --target ${{ matrix.target_triple.name }}

      # Run cargo-wdk on examples and tests
      - name: Install cargo-wdk
        run: cargo +${{ matrix.rust_toolchain }} install --path=crates/cargo-wdk --profile ${{ matrix.cargo_profile }} --locked --force

      - name: Build & Package Examples (via cargo-wdk)
        # Skip this step when WDK 10.0.22621 is used with ARM64 runner as it doesn't ship certmgr and makecert binaries
        if: ${{ !(matrix.wdk.version == '10.0.22621' && matrix.runner.arch == 'arm64') }}
        run: cargo +${{ matrix.rust_toolchain }} wdk build --profile ${{ matrix.cargo_profile }} --target-arch ${{ matrix.target_triple.arch }} --sample
        working-directory: ./examples

      - name: Run build on tests folder (via cargo-wdk)
        # Skip this step when WDK 10.0.22621 is used with ARM64 runner as it doesn't ship certmgr and makecert binaries
        if: ${{ !(matrix.wdk.version == '10.0.22621' && matrix.runner.arch == 'arm64') }}
        run: cargo +${{ matrix.rust_toolchain }} wdk build --profile ${{ matrix.cargo_profile }} --target-arch ${{ matrix.target_triple.arch }}
        working-directory: ./tests
